package dao;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * The DBContext class provides a connection to a SQL Server database
 * and allows retrieving data from the database
 */
public class DBContext {
    public Connection connection = null;

    /**
     * Constructs a DBContext object with default connection parameters.
     * The default parameters assume a local SQL Server instance with
     * a database named "DummiesCourse", using Windows authentication.
     */
    //mat khau bro
    public DBContext() {
        this("jdbc:sqlserver://localhost:1433;databaseName=DummiesCourse;encrypt=false", "sa", "12345678");
    }

    /**
     * Constructs a DBContext object with custom connection parameters.
     *
     * @param url      the JDBC URL of the database
     * @param userName the username for authentication
     * @param pass     the password for authentication
     */
    public DBContext(String url, String userName, String pass) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(url, userName, pass);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(DBContext.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //close connection
    public void closeConnection() {
        try {
            if (connection != null && !connection.isClosed()) {
                connection.close();
            }
        } catch (Exception ex) {
            Logger.getLogger(DBContext.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Executes a SQL query and retrieves the result set.
     *
     * @param sql the SQL query to execute
     * @return the result set generated by the query
     */
    public ResultSet getData(String sql) {
        ResultSet rs = null;
        try {
            Statement state = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            rs = state.executeQuery(sql);
        } catch (SQLException ex) {
            Logger.getLogger(DBContext.class.getName()).log(Level.SEVERE, null, ex);
        }
        return rs;
    }
}
